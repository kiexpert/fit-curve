/*
  JavaScript implementation of
  Algorithm for Automatically Fitting Digitized Curves
  by Philip J. Schneider
  "Graphics Gems", Academic Press, 1990

  The MIT License (MIT)

  https://github.com/soswow/fit-curves
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,d,g){b!=Array.prototype&&b!=Object.prototype&&(b[d]=g.value)};$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(b,d,g,w){if(d){g=$jscomp.global;b=b.split(".");for(w=0;w<b.length-1;w++){var l=b[w];l in g||(g[l]={});g=g[l]}b=b[b.length-1];w=g[b];d=d(w);d!=w&&null!=d&&$jscomp.defineProperty(g,b,{configurable:!0,writable:!0,value:d})}};
$jscomp.polyfill("Math.hypot",function(b){return b?b:function(b,g,w){b=Number(b);g=Number(g);var l,d=Math.max(Math.abs(b),Math.abs(g));for(l=2;l<arguments.length;l++)d=Math.max(d,Math.abs(arguments[l]));if(1E100<d||1E-100>d){if(!d)return d;b/=d;g/=d;var x=b*b+g*g;for(l=2;l<arguments.length;l++){var a=Number(arguments[l])/d;x+=a*a}return Math.sqrt(x)*d}x=b*b+g*g;for(l=2;l<arguments.length;l++)a=Number(arguments[l]),x+=a*a;return Math.sqrt(x)}},"es6","es3");
(function(b,d){if("function"===typeof define&&define.amd)define(["module"],d);else if("undefined"!==typeof exports)d(module);else{var g={exports:{}};d(g);b.fitCurve=g.exports}})(this,function(b){function d(a,p){if(!(a instanceof p))throw new TypeError("Cannot call a class as a function");}function g(e,p,c,f,r){var b;if(2===e.length){f=a.vectorLen(a.subtract(e[0],e[1]))/3;var h=[e[0],a.addArrays(e[0],a.mulItems(p,f)),a.addArrays(e[1],a.mulItems(c,f)),e[1]];return[h]}var t=B(e);var m=w(e,t,t,p,c,r);
h=m[0];var d=m[1];m=m[2];if(d<f)return[h];if(d<f*f){var z=t;var q=d;var A=m;for(b=0;20>b;b++){z=l(h,e,z);m=w(e,t,z,p,c,r);h=m[0];d=m[1];m=m[2];if(d<f)return[h];if(m===A&&(q=d/q,.9999<q&&1.0001>q))break;q=d;A=m}}h=[];t=a.subtract(e[m-1],e[m+1]);t.every(function(a){return 0===a})&&(t=a.subtract(e[m-1],e[m]),d=[-t[1],t[0]],t[0]=d[0],t[1]=d[1]);t=a.normalize(t);d=a.mulItems(t,-1);h=h.concat(g(e.slice(0,m+1),p,t,f,r));return h=h.concat(g(e.slice(m),d,c,f,r))}function w(e,p,c,f,r,d){var h,b=e[0],m=e[e.length-
1];var g=[b,null,null,m];var v=a.zeros_Xx2x2(c.length);var q=0;for(h=c.length;q<h;q++){var l=c[q];var k=1-l;var u=v[q];u[0]=a.mulItems(f,3*l*k*k);u[1]=a.mulItems(r,3*k*l*l)}k=[[0,0],[0,0]];var n=[0,0];q=0;for(h=e.length;q<h;q++)l=c[q],u=v[q],k[0][0]+=a.dot(u[0],u[0]),k[0][1]+=a.dot(u[0],u[1]),k[1][0]+=a.dot(u[0],u[1]),k[1][1]+=a.dot(u[1],u[1]),l=a.subtract(e[q],y.q([b,b,m,m],l)),n[0]+=a.dot(u[0],l),n[1]+=a.dot(u[1],l);c=k[0][0]*k[1][1]-k[1][0]*k[0][1];v=k[0][0]*n[1]-k[1][0]*n[0];k=n[0]*k[1][1]-n[1]*
k[0][1];k=0===c?0:k/c;n=0===c?0:v/c;v=a.vectorLen(a.subtract(b,m));c=1E-6*v;k<c||n<c?(g[1]=a.addArrays(b,a.mulItems(f,v/3)),g[2]=a.addArrays(m,a.mulItems(r,v/3))):(g[1]=a.addArrays(b,a.mulItems(f,k)),g[2]=a.addArrays(m,a.mulItems(r,n)));f=0;r=e.length/2;k=x(g,10);b=0;for(m=e.length;b<m;b++){n=e[b];v=void 0;c=p[b];if(0>c)c=0;else if(1<c)c=1;else{for(h=1;10>=h;h++)if(c<=k[h]){v=(h-1)/10;u=h/10;q=k[h-1];h=k[h];v=(c-q)/(h-q)*(u-v)+v;break}c=v}n=a.subtract(y.q(g,c),n);n=n[0]*n[0]+n[1]*n[1];n>f&&(f=n,r=
b)}r=[f,r];f=r[0];r=r[1];d&&d({bez:g,points:e,params:p,maxErr:f,maxPoint:r});return[g,f,r]}function l(e,p,c){return c.map(function(c,b){b=p[b];var f=a.subtract(y.q(e,c),b),d=y.qprime(e,c);b=a.mulMatrix(f,d);f=a.sum(a.squareItems(d))+2*a.mulMatrix(f,y.qprimeprime(e,c));return 0===f?c:c-b/f})}function B(e){var p=[],c,f,b;e.forEach(function(e,d){c=d?f+a.vectorLen(a.subtract(e,b)):0;p.push(c);f=c;b=e});return p=p.map(function(c){return c/f})}var x=function(e,p){for(var c,f=[0],b=e[0],d=0,h=1;h<=p;h++)c=
y.q(e,h/p),d+=a.vectorLen(a.subtract(c,b)),f.push(d),b=c;return f=f.map(function(c){return c/d})},a=function(){function a(){d(this,a)}a.zeros_Xx2x2=function(a){for(var c=[];a--;)c.push([0,0]);return c};a.mulItems=function(a,c){return a.map(function(a){return a*c})};a.mulMatrix=function(a,c){return a.reduce(function(a,b,p){return a+b*c[p]},0)};a.subtract=function(a,c){return a.map(function(a,b){return a-c[b]})};a.addArrays=function(a,c){return a.map(function(a,b){return a+c[b]})};a.addItems=function(a,
c){return a.map(function(a){return a+c})};a.sum=function(a){return a.reduce(function(a,b){return a+b})};a.dot=function(b,c){return a.mulMatrix(b,c)};a.vectorLen=function(a){return Math.hypot.apply(Math,a)};a.divItems=function(a,c){return a.map(function(a){return a/c})};a.squareItems=function(a){return a.map(function(a){return a*a})};a.normalize=function(a){return this.divItems(a,this.vectorLen(a))};return a}(),y=function(){function b(){d(this,b)}b.q=function(b,c){var f=1-c,e=a.mulItems(b[0],f*f*f),
d=a.mulItems(b[1],3*f*f*c);f=a.mulItems(b[2],3*f*c*c);b=a.mulItems(b[3],c*c*c);return a.addArrays(a.addArrays(e,d),a.addArrays(f,b))};b.qprime=function(b,c){var e=1-c,d=a.mulItems(a.subtract(b[1],b[0]),3*e*e);e=a.mulItems(a.subtract(b[2],b[1]),6*e*c);b=a.mulItems(a.subtract(b[3],b[2]),3*c*c);return a.addArrays(a.addArrays(d,e),b)};b.qprimeprime=function(b,c){return a.addArrays(a.mulItems(a.addArrays(a.subtract(b[2],a.mulItems(b[1],2)),b[0]),6*(1-c)),a.mulItems(a.addArrays(a.subtract(b[3],a.mulItems(b[2],
2)),b[1]),6*c))};return b}();b.exports=function(b,d,c){if(!Array.isArray(b))throw new TypeError("First argument should be an array");b.forEach(function(a){if(!Array.isArray(a)||a.some(function(a){return"number"!==typeof a})||a.length!==b[0].length)throw Error("Each point should be an array of numbers. Each point should have the same amount of numbers.");});b=b.filter(function(a,c){return 0===c||!a.every(function(a,d){return a===b[c-1][d]})});if(2>b.length)return[];var f=b.length,e=a.normalize(a.subtract(b[1],
b[0]));f=a.normalize(a.subtract(b[f-2],b[f-1]));return g(b,e,f,d,c)}});
